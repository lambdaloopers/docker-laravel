version: '3.6'

services:
  nginx:
    build:
      args:
        - USER_ID=${USER_ID}
        - GROUP_ID=${GROUP_ID}
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    depends_on:
      - php
    volumes:
      - ./src:/var/www/html:ro
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
      - ./docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - ${API_PORT:-80}:80
    restart: 'on-failure'

  php:
    build:
      args:
        - USER_ID=${USER_ID}
        - GROUP_ID=${GROUP_ID}
      context: .
      dockerfile: ./docker/php/Dockerfile
    depends_on:
      - mysql
    environment:
      RUN_MIGRATIONS: ${DB_RUN_MIGRATIONS:-false}
    volumes:
      - ./src:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/conf.d/php.ini
    restart: 'on-failure'

  mysql:
    build:
      args:
        - USER_ID=${USER_ID}
        - GROUP_ID=${GROUP_ID}
      context: .
      dockerfile: ./docker/mysql/Dockerfile
    volumes:
      - ./data:/var/lib/mysql
    ports:
      - ${DB_PORT:-3306}:3306
    restart: 'on-failure'
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secret}
      MYSQL_DATABASE: ${DB_DATABASE:-homestead}
      MYSQL_USER: ${DB_USERNAME:-homestead}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
